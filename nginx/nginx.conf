worker_processes 1;

events { 
	worker_connections 1024; 
}

http {
	error_log /var/log/nginx/error.log warn;
	access_log  /dev/null;
	proxy_intercept_errors off;
	proxy_send_timeout 120;
	proxy_read_timeout 300;

    upstream nexus-local {
        server nexus:8081;
	}

	upstream registry-local {
        server nexus:5000;
	}

	map $upstream_http_docker_distribution_api_version $docker_distribution_api_version {
    		'' 'registry/2.0';
  	}


    server {
        listen         80;
        server_name    nginx-service.nexus.svc.devops.local;

	return         301 https://$server_name$request_uri;
    }

    server {
        listen   *:443 ssl;
        server_name  nginx-service.nexus.svc.devops.local;

        # allow large uploads of files - refer to nginx documentation
        #client_max_body_size 1024m;

        # optimize downloading files larger than 1G - refer to nginx doc before adjusting
        #proxy_max_temp_file_size 2048m

        ssl on;
        ssl_certificate      /etc/nginx/domain.crt;
        ssl_certificate_key  /etc/nginx/domain.key;

	# Recommendations from https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
    	ssl_protocols TLSv1.1 TLSv1.2;
    	ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    	ssl_prefer_server_ciphers on;
    	ssl_session_cache shared:SSL:10m;

    	# disable any limits to avoid HTTP 413 for large image uploads
    	client_max_body_size 0;

    	# required to avoid HTTP 411: see Issue #1486 (https://github.com/moby/moby/issues/1486)
    	chunked_transfer_encoding on;

    	location /v2/ {
      	# Do not allow connections from docker 1.5 and earlier
      	# docker pre-1.6.0 did not properly set the user agent on ping, catch "Go *" user agents
      		if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
        		return 404;
		}
      	}
        location / {
		# redirect to docker registry
		if ($http_user_agent ~ docker ) {
			add_header 'Docker-Distribution-Api-Version' $docker_distribution_api_version always;
			proxy_pass http://registry-local;
		}
        #     proxy_pass http://nexus-local;
        #     proxy_set_header Host $http_host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	    # 	proxy_set_header X-Forwarded-Proto $scheme;
        #     proxy_read_timeout                  1000;
		add_header 'Docker-Distribution-Api-Version' $docker_distribution_api_version always;
		proxy_pass                          http://registry-local;
      	proxy_set_header  Host              $http_host;   # required for docker client's sake
      	proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
      	proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
      	proxy_set_header  X-Forwarded-Proto $scheme;
      	proxy_read_timeout                  900;
        }
    }
}
